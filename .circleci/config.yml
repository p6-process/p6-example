version: 2.1
jobs:
  build:
    machine: true
    resource_class: medium
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx6400m
      GRAALVM_HOME: /home/circleci/repo/.graalvm
      MAVEN_CLI_OPTS: "-s .scripts/.m2/settings.xml --batch-mode"
      GIT_TEMPLATE_URL: https://github.com/p6-process/pipeline.git
    steps:
      - checkout
      - run:
          name: "Configuration"
          command: git clone $GIT_TEMPLATE_URL .scripts
      - restore_cache:
          keys:
            - v1-{{ checksum "pom.xml" }}
            - v1-
      - run:
          name: "Build version"
          command: ./mvnw $MAVEN_CLI_OPTS semver-release:version-git-hash
      - run:
          name: "Build (jvm)"
          command: ./mvnw $MAVEN_CLI_OPTS clean package
#      - run:
#          name: "Install Helm"
#          command: curl https://get.helm.sh/helm-v2.14.3-linux-amd64.tar.gz -O -J -L && tar xfz helm-v2.14.3-linux-amd64.tar.gz linux-amd64/helm --strip-components 1 && sudo mv helm /usr/local/bin/
#      - run:
#          name: "Build (helm)"
#          command: ./mvnw $MAVEN_CLI_OPTS process-resources helm:init@package helm:dependency-build@package helm:package@package helm:lint@package -DskipTests -Dmaven.test.skip=true -Ddocker.registry=$DOCKER_REGISTRY -Phelm
      - run:
          name: "Install GraalVM"
          command: curl https://github.com/oracle/graal/releases/download/vm-19.2.0.1/graalvm-ce-linux-amd64-19.2.0.1.tar.gz -O -J -L && tar xfz graalvm-ce-linux-amd64-19.2.0.1.tar.gz && mv graalvm-ce-19.2.0.1 .graalvm && rm graalvm-ce-linux-amd64-19.2.0.1.tar.gz
      - run:
          name: "Install native-image"
          command: $GRAALVM_HOME/bin/gu install native-image
      - run:
          name: "Build (native)"
          command: ./mvnw $MAVEN_CLI_OPTS quarkus:native-image@native -Pnative
          no_output_timeout: 30m
      - run:
          name: "Build (docker)"
          command: ./mvnw $MAVEN_CLI_OPTS dockerfile:build@native dockerfile:tag@branch -Pdocker -Ddockerfile.useMavenSettingsForAuth=true -Ddocker.registry=$DOCKER_REGISTRY -Ddocker.branch.tag=$CIRCLE_BRANCH
#      - run:
#          name: "Test (native)"
#          command: ./mvnw $MAVEN_CLI_OPTS failsafe:integration-test@native failsafe:verify@native -Pnative -Ddockerfile.useMavenSettingsForAuth=true -Ddocker.registry=$DOCKER_REGISTRY
      - run:
          name: "Publish (docker)"
          command: ./mvnw $MAVEN_CLI_OPTS dockerfile:push@native dockerfile:push@branch -Pdocker -Ddockerfile.useMavenSettingsForAuth=true -Ddocker.registry=$DOCKER_REGISTRY -Ddocker.branch.tag=$CIRCLE_BRANCH
      - save_cache:
          paths:
            - ~/.m2
          key: v1-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: .
          paths:
            - pom.xml
            - .scripts
            - target/*

workflows:
  version: 2
  maven-build:
    jobs:
      - build:
          context: Pipeline
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /.*/
